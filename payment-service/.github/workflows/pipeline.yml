#name: CI/CD Pipeline for Payment Service
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      # Bước 1: Checkout mã nguồn
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      # Bước 2: Thiết lập JDK 21
#      - name: Set up JDK 21
#        uses: actions/setup-java@v3
#        with:
#          java-version: '21'
#          distribution: 'corretto'
#          cache: maven
#
#      # Bước 3: Build ứng dụng với Maven
#      - name: Build with Maven
#        run: mvn clean package -DskipTests
#
#      - name: Login to Docker Hub
#        run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
#
#      # Bước 5: Build và push Docker image
#      - name: Build and push Docker image
#        run: |
#          docker build -t devhuynh2003/payment-service:latest .
#          docker push devhuynh2003/payment-service:latest
#      # Bước 6: Triển khai lên VPS
#      - name: Deploy to VPS
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.VPS_HOST }}
#          username: ${{ secrets.VPS_USERNAME }}
#          password: ${{ secrets.VPS_PASSWORD }}
#          script: |
#            # Kéo image mới nhất từ Docker Hub
#            docker pull devhuynh2003/payment-service:latest
#
#            # Dừng và xóa container cũ (nếu có)
#            docker rm -f payment-service || echo "No container named payment-service found."
#
#            # Xóa các image cũ không còn sử dụng
#            docker images -f "dangling=true" -q | xargs --no-run-if-empty docker rmi
#
#            # Tạo lại container mới từ image đã pull
#            docker run -d \
#            -p 8085:8085 \
#            --env-file /root/devhuynh/.env \
#            --name payment-service \
#            devhuynh2003/payment-service:latest
#
#
name: Deploy Java Spring Boot Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Build docker image
        run: docker build -t devhuynh2003/payment-service .

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push image to Docker Hub
        run: docker push devhuynh2003/payment-service:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Pull image from Docker Hub
        run: docker pull devhuynh2003/payment-service:latest

      - name: Delete old container
        run: docker rm -f payment-service || true

      - name: Run docker container
        run: |
          docker run -d \
            -p 8085:8085 \
            --env-file /home/ubuntu/.env \
            --name payment-service \
            devhuynh2003/payment-service:latest
